-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Hasura.Enum.Task_rss_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "task\_rss"

  - Created\_at - column name
  - Enabled - column name
  - Fri - column name
  - Id - column name
  - Last\_pub\_date - column name
  - Mon - column name
  - Random - column name
  - Sat - column name
  - Sun - column name
  - Template - column name
  - Thu - column name
  - Tue - column name
  - Tweet\_at - column name
  - Updated\_at - column name
  - Url - column name
  - User\_id - column name
  - Wed - column name

-}
type Task_rss_select_column
    = Created_at
    | Enabled
    | Fri
    | Id
    | Last_pub_date
    | Mon
    | Random
    | Sat
    | Sun
    | Template
    | Thu
    | Tue
    | Tweet_at
    | Updated_at
    | Url
    | User_id
    | Wed


list : List Task_rss_select_column
list =
    [ Created_at, Enabled, Fri, Id, Last_pub_date, Mon, Random, Sat, Sun, Template, Thu, Tue, Tweet_at, Updated_at, Url, User_id, Wed ]


decoder : Decoder Task_rss_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "created_at" ->
                        Decode.succeed Created_at

                    "enabled" ->
                        Decode.succeed Enabled

                    "fri" ->
                        Decode.succeed Fri

                    "id" ->
                        Decode.succeed Id

                    "last_pub_date" ->
                        Decode.succeed Last_pub_date

                    "mon" ->
                        Decode.succeed Mon

                    "random" ->
                        Decode.succeed Random

                    "sat" ->
                        Decode.succeed Sat

                    "sun" ->
                        Decode.succeed Sun

                    "template" ->
                        Decode.succeed Template

                    "thu" ->
                        Decode.succeed Thu

                    "tue" ->
                        Decode.succeed Tue

                    "tweet_at" ->
                        Decode.succeed Tweet_at

                    "updated_at" ->
                        Decode.succeed Updated_at

                    "url" ->
                        Decode.succeed Url

                    "user_id" ->
                        Decode.succeed User_id

                    "wed" ->
                        Decode.succeed Wed

                    _ ->
                        Decode.fail ("Invalid Task_rss_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Task_rss_select_column -> String
toString enum____ =
    case enum____ of
        Created_at ->
            "created_at"

        Enabled ->
            "enabled"

        Fri ->
            "fri"

        Id ->
            "id"

        Last_pub_date ->
            "last_pub_date"

        Mon ->
            "mon"

        Random ->
            "random"

        Sat ->
            "sat"

        Sun ->
            "sun"

        Template ->
            "template"

        Thu ->
            "thu"

        Tue ->
            "tue"

        Tweet_at ->
            "tweet_at"

        Updated_at ->
            "updated_at"

        Url ->
            "url"

        User_id ->
            "user_id"

        Wed ->
            "wed"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Task_rss_select_column
fromString enumString____ =
    case enumString____ of
        "created_at" ->
            Just Created_at

        "enabled" ->
            Just Enabled

        "fri" ->
            Just Fri

        "id" ->
            Just Id

        "last_pub_date" ->
            Just Last_pub_date

        "mon" ->
            Just Mon

        "random" ->
            Just Random

        "sat" ->
            Just Sat

        "sun" ->
            Just Sun

        "template" ->
            Just Template

        "thu" ->
            Just Thu

        "tue" ->
            Just Tue

        "tweet_at" ->
            Just Tweet_at

        "updated_at" ->
            Just Updated_at

        "url" ->
            Just Url

        "user_id" ->
            Just User_id

        "wed" ->
            Just Wed

        _ ->
            Nothing
